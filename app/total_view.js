// Generated by CoffeeScript 1.3.3
var STORE_FORMAT, TotalView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

STORE_FORMAT = "YYYY/MM/DD Z";

TotalView = (function(_super) {

  __extends(TotalView, _super);

  TotalView.prototype.target_date = moment().local().sod();

  TotalView.prototype.elements = {
    ".items": "items"
  };

  function TotalView() {
    this.remove = __bind(this.remove, this);

    this.refresh = __bind(this.refresh, this);
    TotalView.__super__.constructor.apply(this, arguments);
    WorkLog.bind("refresh save destroy", this.refresh);
  }

  TotalView.prototype.refresh = function() {
    return this.refresh_by(this.target_date);
  };

  TotalView.prototype.refresh_by = function(target_date) {
    var task, total_time, total_time_of_all_task, total_time_of_each_task, work_log, _i, _len, _ref;
    this.target_date = target_date;
    total_time_of_each_task = {};
    total_time_of_all_task = 0;
    _ref = WorkLog.by_date(this.target_date.format(STORE_FORMAT));
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      work_log = _ref[_i];
      if (!total_time_of_each_task[work_log.task]) {
        total_time_of_each_task[work_log.task] = 0;
      }
      total_time_of_each_task[work_log.task] += work_log.time;
      total_time_of_all_task += work_log.time;
    }
    this.items.empty();
    for (task in total_time_of_each_task) {
      total_time = total_time_of_each_task[task];
      this.items.append("<li>" + task + " : " + total_time + "</li>");
    }
    return this.items.append("<li><b>TOTAL</b> : " + total_time_of_all_task + "</li>");
  };

  TotalView.prototype.remove = function() {
    return this.instance.destroy();
  };

  return TotalView;

})(Spine.Controller);
